{"version":3,"sources":["components/pages/frontdor_logo.png","components/pages/Index.js","components/pages/Login.js","components/pages/Register.js","components/pages/CreateTeam.js","components/modals/CreateTeamModal.js","components/headers/TeamHeader.js","components/modals/CreateGroupModal.js","components/headers/GroupHeader.js","components/modals/InviteUserModal.js","components/headers/MemberHeader.js","components/modals/ConnectSMSModal.js","components/headers/CustomerHeader.js","components/conversations/MessageBar.js","components/conversations/Message.js","components/conversations/MessageBoard.js","components/conversations/MessagePage.js","components/conversations/ConversationView.js","components/TeamListItem.js","components/pages/TeamPage.js","components/pages/Home.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js","feathersClient.js"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","Jumbotron","className","src","logo","alt","react_router_dom","to","Login","state","email","password","error","handleInput","e","_this$setState","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","fc","authenticate","strategy","catch","this","props","token","react_router","message","htmlFor","id","type","placeholder","required","onChange","onClick","React","Component","Register","loading","login","_callee","regenerator_default","wrap","_context","prev","next","service","create","then","res","stop","autoFocus","CreateTeam","modal","user","get","toggle","role","aria-label","Button","Modal","isOpen","ModalHeader","ModalBody","InputGroup","Input","teamName","teamNameInput","ModalFooter","teamCreate","CreateTeamModal","changeHandler","event","createTeam","response","modalState","color","TeamHeader","dropdownOpen","teams","logout","toggleModal","getTeams","prevProps","prevState","_this2","teamNames","find","query","_id","activeUser","_ref","asyncToGenerator","mark","_callee2","i","_context2","length","data","teamIds","_ref2","team","push","_x2","apply","arguments","_x","_this3","_ref3","_callee4","_context4","_ref4","_callee3","_context3","_x4","_x3","console","log","_this4","ButtonDropdown","DropdownToggle","caret","DropdownMenu","map","DropdownItem","key","teamChange","modals_CreateTeamModal","CreateGroupModal","modalStatus","groupNameHandler","addGroup","GroupHeader","style","fontSize","modals_CreateGroupModal","assign","InviteUserModal","userEmail","emailChange","addMember","MemberHeader","modals_InviteUserModal","ConnectSMSModal","smsNumber","connectSMS","patch","activeTeamId","CustomerHeader","teamSMS","modals_ConnectSMSModal","MessageBar","Form","inline","FormGroup","clickHandler","Message","convoType","body","MessageBoard","scrollToBottom","messagesEnd","scrollIntoView","behavior","messages","conversations_Message","senderName","senderId","float","clear","ref","el","MessagePage","messageInput","conversationId","Fragment","conversations_MessageBoard","conversations_MessageBar","ConversationView","conversation","Nav","href","replace","trim","conversations_MessagePage","TeamListItem","status","activeUserId","activeConvoId","openConversation","preview","timestamps","TeamPage","teamMembers","groupConvos","memberConvos","customerConvos","messageView","activeConversation","groupName","groupModal","userModal","connectSMSModal","unreadToUnreplied","teamId","userId","statusPath","updatedConvo","concat","sent","getMemberConvos","getGroupConvos","getCustomerConvos","userIds","removeMyNameFromDisplayedMemberConvoName","abrupt","getTeamMembers","_callee5","_context5","getTeam","_callee6","_context6","createNewPersonalConversation_OnJoinTeam","_callee7","_context7","createNewMember2MemberConversations_OnJoinTeam","_callee8","_context8","addNewMemberToAllGroupConversations_OnJoinTeam","_callee9","_context9","$push","initializeGroupConvoStatus_IfNeeded","_callee10","_context10","intializeMemberConvoStatus_IfNeeded","_callee11","_context11","initializeCustomerConvoStatus_IfNeeded","_callee12","_context12","getData","_callee13","_context13","updateStateForNewMessage","_callee14","convo","updatedMemberConvos","updatedGroupConvos","updatedCustomerConvos","_context14","updateMessagesForActiveConversation","updateStateForNewConvo","_callee15","_context15","_callee16","_context16","groupNameChange","_callee17","_context17","member","toggleConnectSMSModal","toggleGroupModal","invitedEmails","toggleEmail","_callee18","convoId","_context18","currentTarget","on","headers_TeamHeader","headers_GroupHeader","components_TeamListItem","headers_MemberHeader","headers_CustomerHeader","conversations_ConversationView","getMessages","Home","pages_TeamPage","pages_CreateTeam","ProtectedRoute","component","rest","objectWithoutProperties","render","pathname","from","location","App","teamInput","payload","invitation","invitingTeamId","passport","verifyJWT","$pull","setUser","accessToken","path","exact","pages_Login","pages_Register","components_ProtectedRoute","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","feathers","require","socketio","io","auth","socket","feathersClient","configure","storage","localStorage"],"mappings":"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","file":"static/js/main.deaf4705.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/frontdor_logo.37956169.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"reactstrap\";\nimport logo from \"./frontdor_logo.png\";\n\nfunction Index() {\n  return (\n    <Jumbotron className=\"landingPageDiv\">\n        <img src={ logo } alt=\"Logo Placeholder\" className=\"logoImage\"/>\n        <h2 className=\"landingPageHeader\">FrontDor</h2>\n        <Link to=\"/login\" className=\"authLink\">\n          Login\n        </Link>\n        <Link to=\"/register\" className=\"authLink\">\n          Register\n        </Link>\n    </Jumbotron>\n  );\n}\n\nexport default Index;\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fc } from '../../feathersClient';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    error: null,\n  }\n\n  /**\n   * @param {e} the event\n   *\n   * This function handles user input and sets state accordingly\n   * if there is an error, it will be cleared when user starts\n   * typing again.\n   */\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: null\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    fc.authenticate({\n      strategy: 'local',\n      email: this.state.email,\n      password: this.state.password,\n    })\n      .catch(error => {\n        this.setState({ error })\n      });\n  }\n\n  render() {\n    return (\n      this.props.token ? (\n        <Redirect to=\"/home\" />\n      ) : (\n          <div className=\"formContainer\">\n            <h1>Login</h1>\n            {this.state.error ? (<p>{this.state.error.message}</p>) : ''}\n            <form>\n              <div className=\"formRow\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"formInput\" id=\"email\" name=\"email\" type=\"text\" placeholder=\"email\" required onChange={this.handleInput} />\n              </div>\n              <br></br>\n              <div className=\"formRow\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"formInput\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" required onChange={this.handleInput} />\n              </div>\n              <br></br>\n              <div className=\"formRow\">\n                <button className=\"formBtn\" onClick={this.handleSubmit}>Login</button>\n              </div> \n            </form>\n            <Link to=\"/register\">new here? Register</Link>\n          </div>\n        )\n    )\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { fc } from \"../../feathersClient\";\n\nclass Register extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleInput = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  login = () => {\n    fc.authenticate({\n      strategy: \"local\",\n      email: this.state.email,\n      password: this.state.password\n    })\n    .catch(error => this.setState({ error }));\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    fc.service(\"users\")\n      .create({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then(res => {\n        this.login();\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    return this.props.token ? (\n      <Redirect to=\"/home\" />\n    ) : (\n        <div className=\"formContainer\">\n          <h1>Register</h1>\n          <form>\n            <div className=\"formRow\">\n              <label htmlFor=\"name\">Full Name</label>\n              <input\n                className=\"formInput\"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"name\"\n                autoFocus\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className=\"formInput\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"email\"\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className=\"formInput\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <button className=\"formBtn\" onClick={this.handleSubmit}>Register</button>\n            </div>\n          </form>\n          <Link to=\"/login\">already member? Login</Link>\n        </div>\n      );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  Input,\n  Button\n} from \"reactstrap\";\nimport { fc } from '../../feathersClient';\n\nclass CreateTeam extends Component {\n  state = {\n    modal: false,\n    user: fc.get('user')\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"vw-100 vh-100 flex-center flex-column\">\n        <div className=\"jumbotron w-50 text-center\">\n        <h1 className=\"display-4\">Welcome <span role=\"img\" aria-label=\"welcome\">&#x1f44b;</span></h1>\n        <h4 className=\"\">\n          Please feel free to create a team or wait until someone else adds you to their team!\n        </h4>\n        <hr />\n        <Button className=\"teamCreateBtn\" onClick={this.toggle}>\n          Create Team\n        </Button>\n        </div>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Please Enter a Team Name\n          </ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input\n                value={this.props.teamName}\n                onChange={this.props.teamNameInput}\n                name=\"teamInput\"\n                type=\"text\"\n                placeholder=\"Team name\"\n                className=\"firstCreateTeamInput\"\n              />\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button className=\"teamCreateBtn\" onClick={this.props.teamCreate}>\n              Create Team\n            </Button>\n            <Button className=\"cancelBtn\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreateTeam;\n","import React from \"react\";\nimport { fc } from \"../../feathersClient\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nclass CreateTeamModal extends React.Component {\n  state = {\n    teamName: \"\"\n  };\n\n  changeHandler =(event) => {\n    this.setState({teamName: event.target.value});\n  }\n\n  createTeam = (e) => {\n    e.preventDefault();\n    fc.service('teams').create({ // create the team given the input name\n        name: this.state.teamName,\n    })\n    .then((response) => {\n        this.setState({teamName: \"\"});\n        this.props.toggle();\n    })\n}\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.modalState}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle}>Create a New Team</ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input placeholder=\"Enter New Team Name\" value={this.state.teamName} onChange={this.changeHandler}/>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.createTeam}>\n                Create Team\n            </Button>\n            <Button color=\"cancelBtn\" onClick={this.props.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreateTeamModal;\n","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nimport CreateTeamModal from \"../modals/CreateTeamModal\";\nimport { fc } from \"../../feathersClient\";\n\n/**\n * This is the header for the sidebar that allows the user to switch teams\n */\nclass TeamHeader extends React.Component {\n  state = {\n    dropdownOpen: false,\n    modal: false,\n    teams: []\n  };\n\n  componentDidMount(){\n    this.getTeams();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const teamNames = [];\n    fc.service(\"users\").find({query: {_id: this.props.activeUser._id}})\n      .then(async user => {\n        if(this.state.teams && this.state.teams.length !== user.data[0].teamIds.length){\n          for(let i = 0; i < user.data[0].teamIds.length; i++){\n            await fc.service(\"teams\").find({query: {_id: user.data[0].teamIds[i]}})\n              .then(async (team) => {\n                await teamNames.push(team.data[0]);\n              })\n          }\n          this.setState({teams: teamNames});\n        }\n      });\n  }\n\n  async getTeams(){ // CONSIDER REFACTOR TO ARROW FUNCTION \n    const teamNames = [];\n    for(let i = 0; i < this.props.activeUser.teamIds.length; i++){\n      await fc.service(\"users\").find({query: {_id: this.props.activeUser._id}})\n        .then(async (user) => {\n          await fc.service(\"teams\").find({query: {_id: user.data[0].teamIds[i]}})\n            .then(async (team) => {\n              await teamNames.push(team.data[0]);\n            });\n        });\n    }\n    console.log(teamNames);\n    this.setState({teams: teamNames});\n  }\n  \n  logout = () => {\n    fc.logout();\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  toggleModal = () => {\n    this.setState({modal: !this.state.modal});\n  }\n\n  render() {\n    const { dropdownOpen } = this.state;\n    const { teamName } = this.props;\n\n    return (\n      <div className=\"teamDropDown sticky-top\">\n        <div className=\"d-flex justify-content-center mb-4 dropDown\">\n          <ButtonDropdown className=\"switchTeamBtn\" isOpen={dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret>{ teamName }</DropdownToggle>\n            <DropdownMenu>\n              {this.state.teams && this.state.teams.map((team, i) => <DropdownItem key={i} onClick={this.props.teamChange} value={team._id}>{team.name}</DropdownItem>)}\n              <DropdownItem onClick={this.toggleModal}>Create Team</DropdownItem>\n              <DropdownItem onClick={this.logout}>Logout</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n          <CreateTeamModal activeUser={this.props.activeUser} modalState={this.state.modal} toggle={this.toggleModal}/>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default TeamHeader;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nconst CreateGroupModal = props => (\n  <div>\n    <Modal\n      isOpen={props.modalStatus}\n      toggle={props.toggle}\n      className={props.className}\n    >\n      <ModalHeader toggle={props.toggle}>Create a New Group</ModalHeader>\n      <ModalBody>\n        <InputGroup>\n          <Input\n            placeholder=\"Enter New Group Name\"\n            value={props.value}\n            onChange={props.groupNameHandler}\n          />\n        </InputGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={props.addGroup}>\n          Create Group\n        </Button>\n        <Button color=\"cancelBtn\" onClick={props.toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  </div>\n);\n\nexport default CreateGroupModal;\n","import React from \"react\";\nimport CreateGroupModal from \"../modals/CreateGroupModal\";\n\nclass GroupHeader extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"px-2 d-flex justify-content-between align-items-center\">\n          <h6 className=\"text-muted\">Groups</h6>\n          <button onClick={this.props.toggleModal} className=\"addBtn\">\n            <i className=\"material-icons\" style={{ fontSize: \"20px\", color: \"grey\" }}> add_circle_outline </i>\n          </button>\n        </div>\n        <CreateGroupModal toggle={this.props.toggleModal} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default GroupHeader;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nclass InviteUserModal extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.modalStatus}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle}>Invite a New User</ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input placeholder=\"Enter their email address\" value={this.props.userEmail} onChange={this.props.emailChange}/>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.props.addMember}>\n                Invite User\n            </Button>\n            <Button color=\"cancelBtn\" onClick={this.props.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default InviteUserModal;\n","import React from \"react\";\nimport InviteUserModal from \"../modals/InviteUserModal\";\n\nfunction MemberHeader(props) {\n  return (\n    <div>\n      <div className=\"px-2 d-flex justify-content-between align-items-center\">\n        <h6 className=\"text-muted\">Members</h6>\n        <button onClick={props.toggleModal} className=\"addBtn\">\n          <i className=\"material-icons\" style={{ fontSize: \"20px\", color: \"grey\" }}>\n            add_circle_outline\n          </i>\n        </button>\n      </div>\n      <InviteUserModal toggle={props.toggleModal} {...props} />\n    </div>\n  );\n}\n\nexport default MemberHeader;\n","import React from \"react\";\nimport { fc } from \"../../feathersClient\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nclass ConnectSMSModal extends React.Component {\n  state = {\n    smsNumber: \"\"\n  };\n\n  changeHandler =(event) => {\n    this.setState({smsNumber: event.target.value});\n  }\n\n  connectSMS = (e) => {\n    e.preventDefault();\n    fc.service('teams').patch(this.props.activeTeamId, { // assign this sms number as the team's smsNumber \n        smsNumber: this.state.smsNumber,\n    })\n    .then((response) => {\n        this.setState({smsNumber: \"\"});\n        this.props.toggle();\n    })\n}\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.modalState}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle}>Connect Customer SMS</ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input placeholder=\"Enter your FrontDor SMS number. Format: +17708480092\" value={this.state.smsNumber} onChange={this.changeHandler}/>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.connectSMS}>\n                Connect\n            </Button>\n            <Button color=\"cancelBtn\" onClick={this.props.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ConnectSMSModal;","import React from 'react';\nimport ConnectSMSModal from '../modals/ConnectSMSModal';\n\nconst CustomerHeader = props => {\n    return (\n      <div>\n        <div className=\"px-2 d-flex justify-content-between align-items-center\">\n          <h6 className=\"text-muted\">{props.teamSMS.length < 10 ? 'Customers' : props.teamSMS }</h6>\n          <button onClick={props.toggle} className='addBtn'>\n            <i className='material-icons' style={{ fontSize: '20px', color: 'grey' }}>\n              add_circle_outline\n            </i>\n          </button>\n        </div>\n        <ConnectSMSModal activeTeamId={props.activeTeamId} activeUser={props.activeUser} modalState={props.modalState} toggle={props.toggle}/>\n      </div>\n\n    );\n  };\n\nexport default CustomerHeader;","import React from \"react\";\nimport {Form, Input, FormGroup, Button} from \"reactstrap\";\n\nconst MessageBar = props => (\n  <Form className=\"sendMessage\" inline={true}>\n    <FormGroup> \n      <Input className=\"sendInput\" onChange={props.changeHandler} value={props.value} type=\"text\"/>\n      <Button color=\"secondary\" className=\"sendBtn\" onClick={props.clickHandler} type=\"submit\">Send</Button>\n    </FormGroup>\n  </Form>\n);\n\nexport default MessageBar;\n","import React from \"react\";\nimport { PromiseProvider } from \"mongoose\";\n\n// \n// NOTE: this message component is designed to work for both\n// Team messages AND Customer/incoming messages...hence the nested ternary \n\nconst Message = props => (\n  props.convoType === \"incoming\" ? ( // if customer conversation....\n    props.id ?\n  // right side\n    <div className=\"row justify-content-end bounce-in-left\">\n      <div className=\"card messageBubble myMessage text-white\">\n        <div className=\"card-body\">\n          <p className=\"card-text message-text\">{props.body}</p>\n          <h5 className=\"card-title message-sender senderName\">{props.name}</h5>\n        </div>\n      </div>\n    </div>\n    :\n    // left side  \n    <div className=\"card messageBubble theirMessage bounce-in-right\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title message-sender\">{props.name}</h5>\n        <p className=\"card-text message-text\">{props.body}</p>\n      </div>\n    </div>\n  ) : ( // if not customer conversation\n    props.id === props.activeUser._id ?\n    // right side\n      <div className=\"row justify-content-end bounce-in-left\">\n        <div className=\"card messageBubble myMessage text-white\">\n          <div className=\"card-body\">\n            <p className=\"card-text message-text\">{props.body}</p>\n            <h5 className=\"card-title message-sender senderName\">{props.name}</h5>\n          </div>\n        </div>\n      </div>\n      :\n      // left side  \n      <div className=\"card messageBubble theirMessage bounce-in-right\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title message-sender\">{props.name}</h5>\n          <p className=\"card-text message-text\">{props.body}</p>\n        </div>\n      </div>\n  )\n  \n);\n\n\nexport default Message;\n","import React from \"react\";\nimport Message from './Message';\n\nclass MessageBoard extends React.Component{\n\n  componentDidMount(){\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.messages.length !== prevProps.messages.length){\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  render () {\n    return (\n      <div className=\"conversation-body\">\n          {this.props.messages &&\n            this.props.messages.map(message => <Message key={message._id} convoType={this.props.convoType} name={message.senderName} body={message.body} activeUser={this.props.activeUser} id={message.senderId}/>)}\n            <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n      </div>\n    )\n  }\n}\n\n\nexport default MessageBoard;\n","import React from \"react\";\nimport MessageBar from './MessageBar';\nimport MessageBoard from './MessageBoard';\nimport { fc } from \"../../feathersClient\";\n\nclass MessagePage extends React.Component {\n  state = {\n    messageInput: \"\",\n  };\n\n  changeHandler = event => {\n    this.setState({ messageInput: event.target.value });\n  };\n\n  clickHandler = event => {\n    event.preventDefault();\n    fc.service(\"messages\")\n      .create({\n        body: this.state.messageInput,\n        senderId: this.props.activeUser._id,\n        senderName: this.props.activeUser.name,\n        conversationId: this.props.conversationId\n      })\n      .then((data) => {\n        this.setState({ messageInput: \"\" });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MessageBoard convoType={this.props.convoType} messages={this.props.messages} activeUser={this.props.activeUser} />\n        <div className=\"px-4 border-top d-flex pb-4 bg-light conversation-view-footer fixed-bottom\">\n          <MessageBar\n            changeHandler={this.changeHandler}\n            clickHandler={this.clickHandler}\n            value={this.state.messageInput}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nimport MessagePage from './MessagePage';\nimport { fc } from '../../feathersClient';\nimport { Nav, Jumbotron } from \"reactstrap\";\nimport { userInfo } from 'os';\n\nclass ConversationView extends React.Component {\n\n  render() {\n    // want convo.type, convo.name, convo.id, updateMessages\n    const { conversation } = this.props;\n\n    return conversation ?\n      (<div className=\"col-8 pl-0 pr-0\" id='conversation-view'>\n      <Nav className=\"navbar bg-light d-flex justify-content-center sticky-top\">\n        <span className=\"navbar-brand\" href=\"#\">{ conversation.type === \"member\" ? (conversation.name.replace(this.props.activeUser.name, \"\").trim() ) : (conversation.name)}</span>\n      </Nav>\n        <MessagePage convoType={conversation.type} {...this.props}/>\n      </div>)\n      :\n      (<div className=\"col-8 pl-0 pr-0\" id='conversation-view'>\n      <Nav className=\"navbar bg-light d-flex justify-content-center sticky-top\">\n        <span className=\"navbar-brand\" href=\"#\">{\"Welcome, \" + this.props.activeUser.name}</span>\n      </Nav>\n      <MessagePage convoType=\"\" {...this.props}/>\n      </div>);\n  }\n}\n\nexport default ConversationView;\n","import React from 'react';\n\n\n// props.status[props.activeUserId]  {props.status[props.activeUserId] + \nconst TeamListItem = props => {\n  const status = props.status[props.activeUserId];\n  return (\n    props.activeConvoId === props._id\n    ? <div className=\"border teamListItem activeConvo fade-in\" id={props._id} onClick={props.openConversation}>\n      <i className={'material-icons notifyDot '+ status} style={{ fontSize: '20px' }}>\n        fiber_manual_record\n      </i>\n      <h5 className='listName'>{props.name}</h5>\n      <div className='previewText text-muted'>{props.preview}</div>\n      <div className='elapsedTime'>{props.timestamps}</div>\n    </div> : \n    <div className=\"border teamListItem slide-in-bck-center\" id={props._id} onClick={props.openConversation}>\n      <i className={'material-icons notifyDot ' + status} style={{ fontSize: '20px' }}>\n        fiber_manual_record\n      </i>\n      <h5 className='listName'>{props.name}</h5>\n      <div className='previewText text-muted'>{props.preview}</div>\n      <div className='elapsedTime'>{props.timestamps}</div>\n    </div>\n  );\n  \n};\n\nexport default TeamListItem;\n","import React from 'react';\nimport { fc } from '../../feathersClient';\nimport TeamHeader from '../headers/TeamHeader';\nimport GroupHeader from '../headers/GroupHeader';\nimport MemberHeader from '../headers/MemberHeader';\nimport CustomerHeader from \"../headers/CustomerHeader\";\nimport ConversationView from '../conversations/ConversationView';\nimport TeamListItem from '../TeamListItem';\n\n// this.props =  activeTeamId, activeUser,  teamCreate, teamNameInput, teamName, {...props}\nclass TeamPage extends React.Component {\n  state = {\n    messages: [],\n    teamMembers: [],\n    teamName: '',\n    teamSMS: \"\",\n    groupConvos: [],\n    memberConvos: [],\n    customerConvos: [],\n    messageView: false,\n    activeConversation: null,\n    activeConvoId: '',\n    groupName: \"\",\n    groupModal: false,\n    userEmail: \"\",\n    userModal: false,\n    connectSMSModal: false\n  };\n\n  // When a conversation is opened change unread to unreplied. \n  unreadToUnreplied = async () => {\n    const teamId = this.props.activeTeamId;\n    const userId = this.props.activeUser._id;\n    // update db \n    let statusPath = `status.${userId}`;\n    if (this.state.activeConversation.status[userId] === \"unread\") {\n      const updatedConvo = await fc.service('conversations').patch(this.state.activeConvoId, { [statusPath] : \"unreplied\"})\n      // update state with new convos from db \n      const type = updatedConvo.type;\n      if (type===\"member\") {const memberConvos = await this.getMemberConvos(teamId, this.props.activeUser); await this.setState({memberConvos})}\n      else if (type===\"group\") {const groupConvos = await this.getGroupConvos(teamId, this.props.activeUser); await this.setState({groupConvos})}\n      else if (type===\"incoming\") {const customerConvos = await this.getCustomerConvos(teamId, this.props.activeUser); await this.setState({customerConvos})}\n    }\n  } // done\n  getMemberConvos = async (teamId, user) => { \n    let memberConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"member\"}});\n    if (memberConvos.data.length > 0) {memberConvos = await this.removeMyNameFromDisplayedMemberConvoName(memberConvos.data, user);} else {memberConvos = memberConvos.data}\n    return memberConvos;\n  } // done\n  getGroupConvos = async (teamId, user) => { \n    const groupConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"group\"}});\n    return groupConvos.data;\n  } // done\n  getCustomerConvos = async (teamId, user) => {\n    const customerConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"incoming\"}});\n    return customerConvos.data;\n  } // done\n  getTeamMembers = async (teamId) => {\n    const teamMembers = await fc.service('users').find({query: {teamIds: teamId}});\n    return teamMembers.data;\n  } // done\n  getTeam = async (teamId) => {\n    const team = await fc.service('teams').get(teamId);\n    return team;\n  } // done\n  removeMyNameFromDisplayedMemberConvoName = (memberConvos,user) => {\n    for (let i=1; i<memberConvos.length; i++) {\n      memberConvos[i].name = memberConvos[i].name.replace(user.name, \"\").trim()\n    }\n    return memberConvos\n  } // done\n  createNewPersonalConversation_OnJoinTeam = async (teamId, user) => {\n    const myConvo = await fc.service('conversations').create({teamId: teamId, type: \"member\", name: user.name + \" (you)\", userIds: user._id, status: {[user._id]: \"replied\"}});\n  } // done\n  createNewMember2MemberConversations_OnJoinTeam = async (teamMembers, teamId, user) => {\n    for (let i = 0; i < teamMembers.length; i++) {\n      if (user._id !== teamMembers[i]._id) {\n        const convo = await fc.service('conversations').create({\n          name: user.name + ' ' + teamMembers[i].name,\n          userIds: [user._id, teamMembers[i]._id],\n          type: 'member',\n          teamId: teamId,\n          status: {[user._id]: \"replied\"}\n        });\n      }\n    }\n  } // done\n  addNewMemberToAllGroupConversations_OnJoinTeam = async (teamId, user) => {\n    return await fc.service('conversations').patch(null, {$push: {userIds: user._id}}, {query: {teamId: teamId, type: \"group\"}});\n  } // done\n  initializeGroupConvoStatus_IfNeeded = async (groupConvos, user) => {\n    for (let i = 0; i<groupConvos.length; i++) {\n      if (!groupConvos[i].status) {\n        groupConvos[i].status = {};\n      }\n      if (!groupConvos[i].status[user._id]) {\n        groupConvos[i].status[user._id] = \"replied\"\n        const groupConvo = await fc.service('conversations').patch(groupConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return groupConvos;\n  } // done\n  intializeMemberConvoStatus_IfNeeded = async (memberConvos, user) => {\n    for (let i = 0; i<memberConvos.length; i++) {\n      if (!memberConvos[i].status) {\n        memberConvos[i].status = {};\n      }\n      if (!memberConvos[i].status[user._id]) {\n        memberConvos[i].status[user._id] = \"replied\"\n        await fc.service('conversations').patch(memberConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return memberConvos;\n  } // done\n  initializeCustomerConvoStatus_IfNeeded = async (customerConvos, user) => {\n    for (let i = 0; i<customerConvos.length; i++) {\n      if (!customerConvos[i].status) {\n        customerConvos[i].status = {};\n      }\n      if (!customerConvos[i].status[user._id]) {\n        customerConvos[i].status[user._id] = \"replied\"\n        await fc.service('conversations').patch(customerConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return customerConvos\n  } // done\n\n\n  getData = async (teamId, user) => {\n    const team = await this.getTeam(teamId);\n    const teamName = team.name;\n    let teamMembers = await this.getTeamMembers(teamId);\n    let groupConvos = await this.getGroupConvos(teamId, user);\n    let memberConvos = await this.getMemberConvos(teamId, user);\n    let customerConvos = await this.getCustomerConvos(teamId, user);\n\n    // upon first login to a team: create the member to member threads between the new member and all other members\n    if (memberConvos.length === 0) {\n      await this.createNewPersonalConversation_OnJoinTeam(teamId, user);\n      await this.createNewMember2MemberConversations_OnJoinTeam(teamMembers, teamId, user);\n      memberConvos = await this.getMemberConvos(teamId, user._id);\n    }\n    if (groupConvos.length === 0) {\n      groupConvos = await this.addNewMemberToAllGroupConversations_OnJoinTeam(teamId, user);\n    }\n\n    // if the status doesn't exist yet set the default status for activeUser on the convo to replied\n    groupConvos = await this.initializeGroupConvoStatus_IfNeeded(groupConvos, user);\n    memberConvos = await this.intializeMemberConvoStatus_IfNeeded(memberConvos, user);\n    customerConvos = await this.initializeCustomerConvoStatus_IfNeeded(customerConvos, user);\n\n    this.setState({\n      teamMembers: teamMembers,\n      teamName: teamName,\n      teamSMS: team.smsNumber || \"\",\n      groupConvos: groupConvos,\n      memberConvos: memberConvos,\n      customerConvos: customerConvos || []\n    });\n  } // done\n  updateStateForNewMessage = async (message) => {\n    // pull convos for this message type and update state\n    const convo = await fc.service('conversations').get(message.conversationId);\n    const convoType = convo.type;\n    if (convoType === \"member\") { const updatedMemberConvos = await this.getMemberConvos(this.props.activeTeamId, this.props.activeUser); this.setState({memberConvos: updatedMemberConvos})}\n    else if (convoType === \"group\") { const updatedGroupConvos = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser); this.setState({groupConvos: updatedGroupConvos})}\n    else if ( convoType === \"incoming\") {const updatedCustomerConvos = await this.getCustomerConvos(this.props.activeTeamId, this.props.activeUser); this.setState({customerConvos: updatedCustomerConvos})}\n    // if convo is current convo then get messages and update state\n    if (this.state.activeConvoId === message.conversationId) {\n      // this.setState({messages: [...this.state.messages, message]})\n      this.updateMessagesForActiveConversation();\n    }\n  } // done\n  updateStateForNewConvo = async convo => {\n    const convoType = convo.type;\n    if (convoType === \"member\") { const updatedMemberConvos = await this.getMemberConvos(this.props.activeTeamId, this.props.activeUser); this.setState({memberConvos: updatedMemberConvos})}\n    else if (convoType === \"group\") { const updatedGroupConvos = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser); this.setState({groupConvos: updatedGroupConvos})}\n    else if ( convoType === \"incoming\") { let updatedCustomerConvos = await this.getCustomerConvos(this.props.activeTeamId, this.props.activeUser); updatedCustomerConvos = await this.initializeCustomerConvoStatus_IfNeeded(updatedCustomerConvos, this.props.activeUser); this.setState({customerConvos: updatedCustomerConvos})}\n  } // done\n\n  updateMessagesForActiveConversation = async () => {\n    const messages = await fc.service(\"messages\").find({ query: { conversationId: this.state.activeConvoId } })\n    await this.setState({ messages: messages.data });\n  }; // done\n  \n\n  componentDidMount() {\n    this.getData(this.props.activeTeamId, this.props.activeUser);\n\n    // Listen to created conversation and add the new convo in real-time\n    fc.service('conversations').on('created', this.updateStateForNewConvo);\n    // listen for new messages, then run updateStateForNewMessages\n    fc.service('messages').on('created', this.updateStateForNewMessage);\n  } // done\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.activeUser !== this.props.activeUser ||\n      prevProps.activeTeamId !== this.props.activeTeamId ||\n      prevState.teamMembers.length !== this.state.teamMembers.length\n    ) {\n      this.getData(this.props.activeTeamId, this.props.activeUser);\n    }\n    if (prevProps.activeTeamId !== this.props.activeTeamId) {\n      this.setState({activeConvoId: \"\", activeConversation: null, messages: []})\n    }\n    // if activeConvoId changes then run get messages to update state\n    if (this.state.activeConvoId && this.state.activeConvoId !== prevState.activeConvoId) {\n      // get the messages for the now active conversation\n      this.updateMessagesForActiveConversation();\n      // change the status of this active conversation to unreplied if unread\n      this.unreadToUnreplied();\n    }\n  }\n\n  groupNameChange = (event) => {\n    this.setState({ groupName: event.target.value });\n  }\n\n  addGroup = async (e) => {\n    e.preventDefault();\n    const userIds = this.state.teamMembers.map(member => member._id);\n    await fc.service('conversations').create({\n        name: this.state.groupName,\n        type: 'group',\n        teamId: this.props.activeTeamId,\n        status: {[this.props.activeUser._id]: \"replied\" },\n        userIds: userIds\n      });\n    // const updatedGroupConversations = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser);\n\n    this.setState({\n      // groupConvos: updatedGroupConversations,\n      groupModal: false,\n      groupName: \"\"\n    })\n  }\n\n  toggleConnectSMSModal = () => {\n    // e.preventDefault();\n    this.setState({connectSMSModal: !this.state.connectSMSModal})\n  };\n\n  toggleGroupModal = (event) => {\n    event.preventDefault();\n    this.setState({ groupModal: !this.state.groupModal });\n  }\n  // on addMember() click, prompt for invitee email address, and add the email to invitedEmails array on team (to be checked later on registration)\n  addMember = e => {\n    e.preventDefault();\n    // console.log(\"add member button clicked\")\n    fc.service(\"users\").find({query: {email: this.state.userEmail}})\n      .then(user => {\n        if(user.data[0] && user.data[0].email === this.state.userEmail){\n          console.log(\"user was found\");\n          fc.service(\"users\").patch(user.data[0]._id, {$push: {teamIds: this.props.activeTeamId}})\n            .then(user => {\n              this.getData(this.props.activeTeamId, this.props.activeUser);\n            });\n        } else {\n          console.log(\"user was not found\");\n          fc.service('teams').patch(this.props.activeTeamId, { $push: { invitedEmails: this.state.userEmail } });\n        }\n      });\n    this.setState({userModal: false});\n  };\n\n  emailChange = (event) => {\n    this.setState({ userEmail: event.target.value });\n  }\n\n  toggleEmail = (event) => {\n    event.preventDefault();\n    this.setState({ userModal: !this.state.userModal });\n  }\n\n  // when a conversation is clicked, open it up in ConversationPage ?\n  openConversation = async e => {\n    e.preventDefault();\n    const convoId = e.currentTarget.id;\n    const convo = await fc.service('conversations').get(convoId)\n    this.setState({ activeConvoId: convoId, activeConversation: convo });\n  }\n\n\n  render() {\n    return (\n      <div className=\"row\" id=\"team-page\">\n        <div className=\"col-4 flex-column justify-content-center border-right convoView\">\n        <TeamHeader teamName={this.state.teamName} activeUser={this.props.activeUser} teamChange={this.props.teamChange}/>\n            <div>\n            <GroupHeader addGroup={this.addGroup} value={this.state.groupName} modalStatus={this.state.groupModal} groupNameHandler={this.groupNameChange} toggleModal={this.toggleGroupModal} {...this.props} />\n            {this.state.groupConvos.length > 0 ? (\n                this.state.groupConvos.map(convo => <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId} activeUserId={this.props.activeUser._id} openConversation={this.openConversation} {...convo} />\n                )\n              ) : ( <h6 className='listItem'>{null}</h6>)\n            }\n            <MemberHeader addMember={this.addMember} modalStatus={this.state.userModal} emailChange={this.emailChange} value={this.state.userEmail} {...this.props} toggleModal={this.toggleEmail} />\n            {this.state.memberConvos.length > 0 ? (\n              this.state.memberConvos.map(convo => (\n                <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId} activeUserId={this.props.activeUser._id} openConversation={this.openConversation} {...convo} />\n              ))\n            ) : (\n              <h3 className='listItem'>{null}</h3>\n            )}\n          <CustomerHeader teamSMS={this.state.teamSMS} activeTeamId={this.props.activeTeamId}  modalState={this.state.connectSMSModal} toggle={this.toggleConnectSMSModal} {...this.props} />\n          {this.state.customerConvos.length > 0 ? (\n            this.state.customerConvos.map(convo => <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId}  activeUserId={this.props.activeUser._id} openConversation={this.openConversation} {...convo} />\n            )\n          ) : (<h6 className=\"listItem\">{null}</h6>)\n          }\n            </div>\n        </div>\n        <ConversationView getMessages={this.updateMessagesForActiveConversation} messages={this.state.messages} activeUser={this.props.activeUser} conversationId={this.state.activeConvoId} conversation={this.state.activeConversation} />\n      </div>\n    );\n  }\n}\n\nexport default TeamPage;\n","import React from 'react';\nimport CreateTeam from './CreateTeam'\nimport TeamPage from './TeamPage'\n\nfunction Home(props) {\n  return (\n    <div>\n      {props.activeTeamId ?\n        <TeamPage {...props}/> :\n        <CreateTeam teamCreate={props.teamCreate} teamNameInput={props.teamNameInput}/>}\n    </div>\n  )\n\n}\n\nexport default Home;\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ component: Component, token, activeTeamId, activeUser, teamNameInput, teamCreate, teamChange, teamName, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        token ? (\n          <Component activeTeamId={activeTeamId} activeUser={activeUser} teamCreate={teamCreate} teamNameInput={teamNameInput} teamChange={teamChange} teamName={teamName} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/register\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Index from './components/pages/Index';\nimport Login from './components/pages/Login';\nimport Register from './components/pages/Register';\nimport Home from './components/pages/Home';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { fc } from './feathersClient';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    token: false,\n    activeUser: {},\n    activeTeamId: '',\n    teamInput: '',\n  };\n\n  componentDidMount() {\n    /**\n     * Check localStorage for a jwt token and attempt to authenticate the\n     * token. If the token fails to pass authentication, then don't\n     * do anything (fail silently).\n     */\n    fc.authenticate().catch(() => {});\n    // On successful login\n    fc.on('authenticated', response => {\n      const setUser = async token => {\n        const payload = await fc.passport.verifyJWT(token);\n        let user = await fc.service('users').get(payload.userId);\n        const invitation = await fc.service('teams').find({ query: { invitedEmails: user.email } }); // only works for 1 invitation at a time right now\n        if (invitation.data.length === 1) {\n          const invitingTeamId = invitation.data[0]._id;\n          user = await fc.service('users').patch(user, {$push: { teamIds: invitingTeamId}});\n          user = await fc.service('users').patch(user, {activeTeamId: invitingTeamId} );\n          const deleteEmailInvite = await fc.service('teams').patch(invitingTeamId, {$pull: {invitedEmails: user.email}});\n        } else if (invitation.data.length > 1) {console.log('more than one invitation, check App.js to add this functionality')}\n\n\n        this.setState({\n          token: token,\n          activeUser: user,\n          activeTeamId: user.activeTeamId,\n        });\n      };\n      setUser(response.accessToken);\n    });\n\n    // Listen for when the user logs out\n    fc.on('logout', response => {\n      this.setState({\n        token: null,\n      });\n    });\n  }\n\n  teamChange = event => {\n    event.preventDefault();\n    fc.service('users').patch(this.state.activeUser, { activeTeamId: event.target.value });\n    this.setState({ activeTeamId: event.target.value });\n  };\n\n  teamNameInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: null,\n    });\n  };\n\n  teamCreate = e => {\n    fc.service('teams').create({\n        name: this.state.teamInput,\n      })\n      .then(data => {\n        this.setState({ activeTeamId: data._id });\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={Index} />\n        <Route\n          path='/login'\n          exact\n          render={props => <Login token={this.state.token} {...props} />}\n        />\n        <Route\n          path='/register'\n          exact\n          render={props => <Register token={this.state.token} {...props} />}\n        />\n        <ProtectedRoute\n          path='/home'\n          exact\n          token={this.state.token}\n          activeTeamId={this.state.activeTeamId}\n          activeUser={this.state.activeUser}\n          teamNameInput={this.teamNameInput}\n          teamCreate={this.teamCreate}\n          teamName={this.state.teamInput}\n          teamChange={this.teamChange}\n          component={Home}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import 'bootstrap-css-only/css/bootstrap.min.css';\n// import 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const feathers = require('@feathersjs/feathers');\nconst socketio = require('@feathersjs/socketio-client');\nconst io = require('socket.io-client');\nconst auth = require('@feathersjs/authentication-client');\n\nconst socketURI = process.env.NODE_ENV !== \"production\" ? \"http://localhost:3030/\" : \"https://frontdor.herokuapp.com\";\n\nconst socket = io(socketURI);\nconst feathersClient = feathers();\n\n// Set up Socket.io client with the socket\nfeathersClient.configure(socketio(socket));\n\nfeathersClient.configure(auth({\n  storage: window.localStorage\n}))\n\nmodule.exports = {\n  fc: feathersClient\n}\n"],"sourceRoot":""}